<%- include('../partials/header') %>

<div class="page-header">
  <h2><i class="fas fa-road"></i> Weekly Mileage Update</h2>
  <div class="page-actions">
    <button id="updateAllBtn" class="btn btn-success">
      <i class="fas fa-save"></i> Save All Updates
    </button>
  </div>
</div>

<% if (vehicles && vehicles.length > 0) { %>
  <!-- Vehicle cards in a grid layout -->
  <div class="vehicles-grid">
    <% vehicles.forEach(vehicle => { %>
      <div class="vehicle-card" data-vehicle-id="<%= vehicle.id %>" data-vehicle-name="<%= vehicle.name || vehicle.brand + ' ' + vehicle.model %>" data-vehicle-plate="<%= vehicle.plate %>" data-vehicle-brand="<%= vehicle.brand %>" data-vehicle-model="<%= vehicle.model %>">
        <div class="vehicle-image-container">
          <div class="status-badge-container">
            <span class="status-badge <%= vehicle.status === 'active' ? 'status-active' : vehicle.status === 'maintenance' ? 'status-maintenance' : 'status-retired' %>">
              <%= vehicle.status === 'active' ? 'Active' : vehicle.status === 'maintenance' ? 'Maintenance' : 'Retired' %>
            </span>
          </div>
          <% if (vehicle.image) { %>
            <img src="<%= vehicle.image %>" alt="<%= vehicle.brand %> <%= vehicle.model %>" class="vehicle-detail-image">
          <% } else { %>
            <img src="/images/vehicles/default-vehicle.svg" alt="<%= vehicle.brand %> <%= vehicle.model %>" class="vehicle-detail-image">
          <% } %>
        </div>
        
        <div class="vehicle-info">
          <div class="vehicle-header">
            <% if (vehicle.name) { %>
              <h3 class="vehicle-title"><%= vehicle.name %></h3>
              <div class="vehicle-subtitle"><%= vehicle.brand %> <%= vehicle.model %></div>
            <% } else { %>
              <h3 class="vehicle-title"><%= vehicle.brand %> <%= vehicle.model %></h3>
            <% } %>
            <div class="vehicle-plate"><%= vehicle.plate %></div>
          </div>
          
          <div class="vehicle-data">
            <div class="vehicle-brand-model">
              <i class="fas fa-car"></i> <%= vehicle.brand %> <%= vehicle.model %>
            </div>
            <div class="vehicle-year">
              <i class="fas fa-calendar-alt"></i> <%= vehicle.year %>
            </div>
            <div class="vehicle-current-mileage">
              <i class="fas fa-road"></i> <%= vehicle.mileage.toLocaleString() %> miles
            </div>
          </div>
          
          <!-- Mileage update form -->
          <div class="mileage-update-container">
            <label for="mileage-<%= vehicle.id %>">New Mileage</label>
            <div class="mileage-input-group">
              <input 
                type="number" 
                id="mileage-<%= vehicle.id %>" 
                class="mileage-input" 
                name="mileage" 
                min="<%= vehicle.mileage %>" 
                value="<%= vehicle.mileage %>" 
                placeholder="Enter new mileage" 
                data-current="<%= vehicle.mileage %>"
                onblur="if(this.value < <%= vehicle.mileage %>) this.value = <%= vehicle.mileage %>"
              >
              <button class="update-btn">Update</button>
            </div>
            <div class="update-status" style="display: none;"></div>
          </div>
          
          <!-- Maintenance indicators -->
          <% if (vehicle.services && vehicle.services.length > 0) { %>
            <div class="maintenance-indicator">
              <div class="service-header">
                <div class="service-count">
                  <i class="fas fa-exclamation-triangle text-warning"></i>
                  <span><%= vehicle.services.length %> service<%= vehicle.services.length > 1 ? 's' : '' %> needed</span>
                </div>
                <button class="toggle-btn" data-bs-toggle="collapse" data-bs-target="#services-<%= vehicle.id %>">
                  <i class="fas fa-chevron-down"></i>
                </button>
              </div>
              <div id="services-<%= vehicle.id %>" class="collapse">
                <% vehicle.services.forEach(service => { %>
                  <div class="service-item">
                    <div class="service-info">
                      <div class="service-name"><%= service.serviceName %></div>
                      <span class="priority-badge priority-<%= service.priority %>">
                        <%= service.priority %>
                      </span>
                    </div>
                  </div>
                <% }); %>
              </div>
            </div>
          <% } else { %>
            <div class="services-status">
              <p class="text-success mb-0"><i class="fas fa-check-circle"></i> No maintenance required</p>
            </div>
          <% } %>
        </div>
      </div>
    <% }); %>
  </div>

  <!-- Maintenance Summary Table -->
  <div class="card mt-5">
    <div class="card-header maintenance-summary-header">
      <h3>Maintenance Summary</h3>
    </div>
    <div class="card-body">
      <div class="table-responsive">
        <table class="table" id="servicesTable">
          <thead>
            <tr>
              <th>Name</th>
              <th>License Plate</th>
              <th>Brand</th>
              <th>Model</th>
              <th>Year</th>
              <th>Service</th>
              <th>Priority</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% 
            let allServices = [];
            vehicles.forEach(vehicle => {
              if (vehicle.services && vehicle.services.length > 0) {
                vehicle.services.forEach(service => {
                  allServices.push({
                    vehicle: vehicle,
                    service: service
                  });
                });
              }
            });
            
            // Sort by priority (high first)
            allServices.sort((a, b) => {
              const priorityOrder = { 'high': 0, 'medium': 1, 'low': 2 };
              return priorityOrder[a.service.priority] - priorityOrder[b.service.priority];
            });
            %>
            
            <% if (allServices.length > 0) { %>
              <% allServices.forEach(item => { %>
                <tr>
                  <td><%= item.vehicle.name || '-' %></td>
                  <td>
                    <div class="plate-tag"><%= item.vehicle.plate %></div>
                  </td>
                  <td><%= item.vehicle.brand %></td>
                  <td><%= item.vehicle.model %></td>
                  <td><%= item.vehicle.year %></td>
                  <td><%= item.service.serviceName %></td>
                  <td>
                    <span class="priority-badge priority-<%= item.service.priority %>">
                      <%= item.service.priority %>
                    </span>
                  </td>
                  <td class="action-cell">
                    <a href="/maintenance/create?vehicleId=<%= item.vehicle.id %>&serviceType=<%= item.service.serviceType %>&mileage=<%= item.vehicle.mileage %>" 
                       class="schedule-btn">
                      <i class="fas fa-calendar-plus"></i>
                      <span>Schedule</span>
                    </a>
                  </td>
                </tr>
              <% }); %>
            <% } else { %>
              <tr>
                <td colspan="8" class="text-center">
                  <div class="empty-state">
                    <i class="fas fa-check-circle text-success"></i>
                    <h4>No Maintenance Required</h4>
                    <p>All vehicles are up to date with their maintenance schedules.</p>
                  </div>
                </td>
              </tr>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
<% } else { %>
  <div class="empty-state">
    <i class="fas fa-car text-muted"></i>
    <h4>No Vehicles Found</h4>
    <p>There are no vehicles available for mileage update.</p>
  </div>
<% } %>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // For updating a single vehicle
    const updateButtons = document.querySelectorAll('.update-btn');
    updateButtons.forEach(button => {
      button.addEventListener('click', async function() {
        const card = this.closest('.vehicle-card');
        const vehicleId = card.dataset.vehicleId;
        const mileageInput = card.querySelector('.mileage-input');
        const statusElement = card.querySelector('.update-status');
        const newMileage = parseInt(mileageInput.value);
        const currentMileage = parseInt(mileageInput.dataset.current);
        
        if (isNaN(newMileage) || newMileage < 0) {
          showStatus(statusElement, 'error', 'Mileage must be a positive number.');
          return;
        }
        
        if (newMileage < currentMileage) {
          showStatus(statusElement, 'error', 'New mileage cannot be less than current mileage.');
          return;
        }
        
        try {
          this.disabled = true;
          this.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
          
          const response = await fetch(`/weekly-update/update-mileage/${vehicleId}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ mileage: newMileage })
          });
          
          const result = await response.json();
          
          if (result.success) {
            // Update the UI
            card.querySelector('.vehicle-current-mileage').innerHTML = `<i class="fas fa-road"></i> ${newMileage.toLocaleString()} miles`;
            mileageInput.dataset.current = newMileage;
            
            // If there are new services, refresh the page to show them
            if (result.services && result.services.length > 0) {
              showStatus(statusElement, 'success', 'Mileage updated successfully. Refreshing for service updates...');
              setTimeout(() => {
                window.location.reload();
              }, 1500);
            } else {
              showStatus(statusElement, 'success', 'Mileage updated successfully.');
            }
          } else {
            showStatus(statusElement, 'error', result.message || 'Error updating mileage.');
          }
        } catch (error) {
          console.error('Error updating mileage:', error);
          showStatus(statusElement, 'error', 'An unexpected error occurred.');
        } finally {
          this.disabled = false;
          this.innerHTML = 'Update';
        }
      });
    });
    
    // For updating all vehicles
    const updateAllBtn = document.getElementById('updateAllBtn');
    if (updateAllBtn) {
      updateAllBtn.addEventListener('click', async function() {
        const updates = [];
        const cards = document.querySelectorAll('.vehicle-card');
        let hasChanges = false;
        
        cards.forEach(card => {
          const vehicleId = card.dataset.vehicleId;
          const mileageInput = card.querySelector('.mileage-input');
          const newMileage = parseInt(mileageInput.value);
          const currentMileage = parseInt(mileageInput.dataset.current);
          
          if (newMileage > currentMileage) {
            updates.push({
              id: vehicleId,
              mileage: newMileage
            });
            hasChanges = true;
          }
        });
        
        if (!hasChanges) {
          alert('No changes detected. Please update at least one vehicle\'s mileage.');
          return;
        }
        
        if (confirm(`You are about to update ${updates.length} vehicle${updates.length > 1 ? 's' : ''}. Continue?`)) {
          try {
            updateAllBtn.disabled = true;
            updateAllBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Saving updates...';
            
            const response = await fetch('/weekly-update/update-multiple', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ updates })
            });
            
            const result = await response.json();
            
            if (result.success) {
              alert(`Successfully updated ${result.updated.length} vehicle${result.updated.length > 1 ? 's' : ''}.${result.failed.length > 0 ? ` Failed to update ${result.failed.length} vehicle${result.failed.length > 1 ? 's' : ''}.` : ''}`);
              
              // Refresh to show updated services
              window.location.reload();
            } else {
              alert(`Error: ${result.message}`);
            }
          } catch (error) {
            console.error('Error updating vehicles:', error);
            alert('An unexpected error occurred while updating vehicles.');
          } finally {
            updateAllBtn.disabled = false;
            updateAllBtn.innerHTML = '<i class="fas fa-save"></i> Save All Updates';
          }
        }
      });
    }
    
    // Quick filter
    const quickFilter = document.getElementById('quickFilter');
    if (quickFilter) {
      quickFilter.addEventListener('input', function() {
        const filterValue = this.value.toLowerCase();
        const cards = document.querySelectorAll('.vehicle-card');
        
        cards.forEach(card => {
          const name = card.dataset.vehicleName.toLowerCase();
          const plate = card.dataset.vehiclePlate.toLowerCase();
          const brand = card.dataset.vehicleBrand.toLowerCase();
          const model = card.dataset.vehicleModel.toLowerCase();
          
          if (name.includes(filterValue) || plate.includes(filterValue) || 
              brand.includes(filterValue) || model.includes(filterValue)) {
            card.style.display = '';
          } else {
            card.style.display = 'none';
          }
        });
      });
    }
    
    // Function to show status messages
    function showStatus(element, type, message) {
      element.innerHTML = `<div class="alert alert-${type === 'error' ? 'danger' : 'success'}">${message}</div>`;
      element.style.display = 'block';
      
      // Auto-hide after 5 seconds
      setTimeout(() => {
        element.style.display = 'none';
      }, 5000);
    }
  });
</script>

<style>
  /* Vehicle grid styles */
  .vehicles-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 25px;
    margin: 25px 0 40px 0;
  }
  
  /* Vehicle card styles */
  .vehicle-card {
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    background-color: #fff;
    transition: transform 0.2s, box-shadow 0.2s;
    display: flex;
    flex-direction: column;
    height: 100%;
  }
  
  .vehicle-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
  }
  
  /* Vehicle image container */
  .vehicle-image-container {
    height: 180px;
    position: relative;
    overflow: hidden;
    background-color: #f0f0f0;
  }
  
  .vehicle-detail-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s;
  }
  
  .vehicle-card:hover .vehicle-detail-image {
    transform: scale(1.05);
  }
  
  /* Status badge */
  .status-badge-container {
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 5;
  }
  
  .status-badge {
    display: inline-block;
    padding: 4px 10px;
    border-radius: 30px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
  }
  
  .status-active {
    background-color: #2ecc71;
    color: white;
  }
  
  .status-maintenance {
    background-color: #f39c12;
    color: white;
  }
  
  .status-retired {
    background-color: #e74c3c;
    color: white;
  }
  
  /* Vehicle info */
  .vehicle-info {
    padding: 15px;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }
  
  .vehicle-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 10px;
  }
  
  .vehicle-title {
    margin: 0;
    font-size: 1.1rem;
    color: #2c3e50;
    font-weight: 600;
  }
  
  .vehicle-subtitle {
    color: #7f8c8d;
    font-size: 0.9rem;
    margin-top: 2px;
  }
  
  .vehicle-data {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 12px;
    color: #7f8c8d;
    font-size: 0.85rem;
  }
  
  .vehicle-brand-model, .vehicle-year, .vehicle-current-mileage {
    display: flex;
    align-items: center;
    gap: 5px;
  }
  
  /* Mileage update form */
  .mileage-update-container {
    margin: 15px 0;
    padding: 15px;
    background-color: #f8f9fa;
    border-radius: 8px;
  }
  
  .mileage-update-container label {
    display: block;
    font-size: 0.9rem;
    font-weight: 500;
    color: #495057;
    margin-bottom: 8px;
  }
  
  .mileage-input-group {
    display: flex;
    gap: 8px;
  }
  
  .mileage-input {
    flex: 1;
    padding: 8px 12px;
    border: 1px solid #dee2e6;
    border-radius: 6px;
    font-size: 0.9rem;
    color: #495057;
    transition: all 0.2s;
  }
  
  .mileage-input:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
  }
  
  .update-btn {
    background-color: var(--primary-color);
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 6px;
    font-size: 0.9rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s;
  }
  
  .update-btn:hover {
    background-color: #2980b9;
    transform: translateY(-1px);
  }
  
  /* Maintenance indicators */
  .maintenance-indicator {
    margin-top: 15px;
    border-top: 1px solid #eee;
    padding-top: 15px;
  }
  
  .service-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
    padding: 0 12px;
  }
  
  .service-count {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 0.9rem;
    color: #666;
  }
  
  .service-count i {
    color: #f39c12;
  }
  
  .toggle-btn {
    background: none;
    border: none;
    color: #666;
    cursor: pointer;
    padding: 4px;
    transition: transform 0.2s;
  }
  
  .toggle-btn:hover {
    color: var(--primary-color);
  }
  
  .toggle-btn[aria-expanded="true"] i {
    transform: rotate(180deg);
  }
  
  .service-item {
    padding: 12px 16px;
    background-color: #fff;
    border-radius: 6px;
    margin: 0 12px 8px 12px;
    border: 1px solid #eee;
    display: flex;
    align-items: center;
  }
  
  .service-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
  }
  
  .service-name {
    font-weight: 500;
    color: #333;
    font-size: 0.9rem;
    flex: 1;
  }
  
  .priority-badge {
    padding: 4px 12px;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    min-width: 80px;
    text-align: center;
    display: inline-block;
  }
  
  .priority-badge.priority-high {
    background-color: #dc3545;
    color: white;
  }
  
  .priority-badge.priority-medium {
    background-color: #f39c12;
    color: white;
  }
  
  .priority-badge.priority-low {
    background-color: #28a745;
    color: white;
  }
  
  /* Card actions */
  .vehicle-card-actions {
    display: flex;
    border-top: 1px solid #eee;
    margin-top: auto;
  }
  
  .vehicle-action-btn {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    font-size: 0.85rem;
    padding: 12px 0;
    text-align: center;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s ease;
    border: none;
    cursor: pointer;
  }
  
  .view-btn {
    background-color: #3498db;
    color: white;
  }
  
  .schedule-btn {
    background-color: #2ecc71;
    color: white;
  }
  
  .vehicle-action-btn:hover {
    opacity: 0.9;
  }
  
  /* Maintenance Summary Table Styles */
  .maintenance-summary-header {
    background-color: var(--primary-color);
    padding: 1rem 1.5rem;
    border-radius: 10px 10px 0 0;
  }
  
  .maintenance-summary-header h3 {
    color: white;
    margin: 0;
    font-size: 1.3rem;
    font-weight: 500;
  }

  #servicesTable {
    border-collapse: separate;
    border-spacing: 0;
    width: 100%;
    margin-bottom: 1.5rem;
    background-color: #fff;
    border-radius: 10px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
  }
  
  #servicesTable th {
    background-color: #f8f9fa;
    font-weight: 600;
    color: var(--dark-color);
    padding: 0.9rem 1.2rem;
    vertical-align: middle;
    border-bottom: 2px solid #eee;
    font-size: 0.95rem;
  }
  
  #servicesTable td {
    padding: 1rem 1.2rem;
    vertical-align: middle;
    border-bottom: 1px solid #f0f0f0;
    font-size: 0.95rem;
  }
  
  #servicesTable tr:last-child td {
    border-bottom: none;
  }
  
  #servicesTable tbody tr {
    transition: all 0.2s;
  }
  
  #servicesTable tbody tr:nth-child(even) {
    background-color: rgba(52, 152, 219, 0.05);
  }
  
  #servicesTable tbody tr:hover {
    background-color: transparent;
  }

  /* Plate tag in table */
  .plate-tag {
    display: inline-block;
    background-color: var(--secondary-color);
    color: white;
    padding: 5px 10px;
    border-radius: 5px;
    font-weight: 600;
    font-size: 0.9rem;
  }
  
  /* Status badges */
  .status-badge {
    display: inline-block;
    padding: 4px 10px;
    border-radius: 30px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
  }
  
  .status-active {
    background-color: #2ecc71;
    color: white;
  }
  
  .status-maintenance {
    background-color: #f39c12;
    color: white;
  }
  
  .status-retired {
    background-color: #e74c3c;
    color: white;
  }

  /* Action buttons */
  .action-cell {
    white-space: nowrap;
  }
  
  .btn-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    border-radius: 6px;
    border: none;
    background: none;
    cursor: pointer;
    transition: all 0.2s;
    margin: 0 2px;
    text-decoration: none;
  }
  
  .btn-icon:hover {
    background-color: rgba(0, 0, 0, 0.05);
    transform: translateY(-2px);
  }
  
  .text-primary {
    color: var(--primary-color) !important;
  }
  
  .text-warning {
    color: var(--warning-color) !important;
  }
  
  .text-success {
    color: var(--success-color) !important;
  }
  
  @media (max-width: 768px) {
    .vehicles-grid {
      grid-template-columns: 1fr;
    }
  }
  
  /* Quick filter styles */
  .quick-filter-container {
    margin-bottom: 20px;
  }
  
  /* Service button styles with priority */
  .schedule-btn.needed.high-priority {
    background-color: #dc3545;
    color: white;
  }
  
  .schedule-btn.needed.medium-priority {
    background-color: #fd7e14;
    color: white;
  }
  
  .schedule-btn.needed.low-priority {
    background-color: #ffc107;
    color: #212529;
  }
  
  .schedule-btn.upcoming.high-priority {
    background-color: #0d6efd;
    color: white;
  }
  
  .schedule-btn.upcoming.medium-priority {
    background-color: #0dcaf0;
    color: #212529;
  }
  
  .schedule-btn.upcoming.low-priority {
    background-color: #6c757d;
    color: white;
  }

  /* Badge styles in table */
  .badge {
    font-size: 0.95rem;
    padding: 6px 10px;
  }

  /* Vehicle name in table */
  .vehicle-name {
    font-size: 1rem;
  }

  .vehicle-subtitle {
    font-size: 0.9rem;
  }

  /* Priority-based row styling */
  .priority-high {
    background-color: rgba(231, 76, 60, 0.1);
  }
  
  .priority-medium {
    background-color: rgba(243, 156, 18, 0.1);
  }
  
  .priority-low {
    background-color: rgba(46, 204, 113, 0.1);
  }
  
  .priority-badge {
    display: inline-block;
    padding: 6px 12px;
    border-radius: 5px;
    font-weight: 600;
    font-size: 0.95rem;
  }
  
  .priority-high .priority-badge {
    background-color: #e74c3c;
    color: white;
  }
  
  .priority-medium .priority-badge {
    background-color: #f39c12;
    color: white;
  }
  
  .priority-low .priority-badge {
    background-color: #2ecc71;
    color: white;
  }

  /* Hover effects for priority rows */
  .priority-high:hover {
    background-color: rgba(231, 76, 60, 0.15);
  }
  
  .priority-medium:hover {
    background-color: rgba(243, 156, 18, 0.15);
  }
  
  .priority-low:hover {
    background-color: rgba(46, 204, 113, 0.15);
  }

  /* Schedule button style */
  .schedule-btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    background-color: var(--primary-color);
    color: white;
    padding: 8px 16px;
    border-radius: 6px;
    font-size: 0.9rem;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s;
    border: none;
  }

  .schedule-btn:hover {
    background-color: #2980b9;
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  }

  .schedule-btn i {
    font-size: 0.9rem;
  }

  /* Service item styles */
  .service-item {
    padding: 12px 16px;
    background-color: #fff;
    border-radius: 6px;
    margin: 0 12px 8px 12px;
    border: 1px solid #eee;
    display: flex;
    align-items: center;
  }
  
  .service-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
  }
  
  .service-name {
    font-weight: 500;
    color: #333;
    font-size: 0.9rem;
    flex: 1;
  }
  
  .priority-badge {
    padding: 4px 12px;
    border-radius: 4px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    min-width: 80px;
    text-align: center;
    display: inline-block;
  }
  
  .priority-badge.priority-high {
    background-color: #dc3545;
    color: white;
  }
  
  .priority-badge.priority-medium {
    background-color: #f39c12;
    color: white;
  }
  
  .priority-badge.priority-low {
    background-color: #28a745;
    color: white;
  }

  #servicesTable tbody tr:hover {
    background-color: transparent;
  }

  .service-item:hover {
    background-color: #fff;
  }
</style>

<%- include('../partials/footer') %> 